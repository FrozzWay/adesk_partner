services:
  django_app:
    build: .
    #restart: always
    #command: "gunicorn --bind=0.0.0.0:8000 core.wsgi"
    command: ["sh", "-c", "python manage.py migrate; gunicorn --bind=0.0.0.0:8000 core.wsgi"]
    working_dir: /app
    volumes:
      - ./:/app
      - static_files:/app/staticfiles
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}

      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_APP_TOKEN_SUBSCRIBE: ${DJANGO_APP_TOKEN_SUBSCRIBE}
      DJANGO_DEBUG: ${DJANGO_DEBUG}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}

      DJANGO_EMAIL_HOST: ${DJANGO_EMAIL_HOST}
      DJANGO_EMAIL_HOST_PASSWORD: ${DJANGO_EMAIL_HOST_PASSWORD}
      DJANGO_EMAIL_HOST_USER: ${DJANGO_EMAIL_HOST_USER}
      DJANGO_EMAIL_PORT: ${DJANGO_EMAIL_PORT}

      DJANGO_AUTH_USER: ${DJANGO_AUTH_USER}
      DJANGO_AUTH_PASSWORD: ${DJANGO_AUTH_PASSWORD}


    depends_on:
      - postgres

  postgres:
    image: postgres:14-alpine
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_DB: ${DATABASE_NAME}

  nginx:
    build: ./nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - static_files:/app/staticfiles
      - letsencrypt:/etc/letsencrypt
    depends_on:
      - django_app

volumes:
  postgres-data:
  static_files:
  letsencrypt: